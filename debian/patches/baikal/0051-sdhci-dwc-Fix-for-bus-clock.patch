From 007aea177f7fd61513c61478258d6f886bf324c7 Mon Sep 17 00:00:00 2001
From: Vitaly Miniakhmetov <vitalii.miniakhmetov@t-platforms.ru>
Date: Thu, 17 Jun 2021 11:50:41 +0500
Subject: [PATCH 051/106] sdhci-dwc: Fix for bus clock

---
 arch/arm64/boot/dts/baikal/bm-dbm.dts  | 11 +++++
 arch/arm64/boot/dts/baikal/bm-mbm.dtsi |  3 ++
 drivers/mmc/host/sdhci-of-dwcmshc.c    | 59 +++++++++++++++++++++-----
 drivers/mmc/host/sdhci.c               |  3 ++
 4 files changed, 65 insertions(+), 11 deletions(-)

diff --git a/arch/arm64/boot/dts/baikal/bm-dbm.dts b/arch/arm64/boot/dts/baikal/bm-dbm.dts
index 14fb886bf618..b82011b13f48 100644
--- a/arch/arm64/boot/dts/baikal/bm-dbm.dts
+++ b/arch/arm64/boot/dts/baikal/bm-dbm.dts
@@ -123,6 +123,17 @@ &i2s {
 
 &mmc0 {
 	status = "okay";
+#if 0
+	/* emmc */
+	non-removable;
+	bus-width = <8>;
+	max-clock = <200000000>;
+#else
+	/* sd */
+	disable-wp;
+	bus-width = <4>;
+	max-clock = <25000000>;
+#endif
 };
 
 &pcie0 {
diff --git a/arch/arm64/boot/dts/baikal/bm-mbm.dtsi b/arch/arm64/boot/dts/baikal/bm-mbm.dtsi
index 7e3c7eeadff6..9d430416a3f0 100644
--- a/arch/arm64/boot/dts/baikal/bm-mbm.dtsi
+++ b/arch/arm64/boot/dts/baikal/bm-mbm.dtsi
@@ -122,6 +122,9 @@ &mdio0 {
 
 &mmc0 {
 	status = "okay";
+	disable-wp;
+	bus-width = <4>;
+	max-clock = <25000000>;
 };
 
 &pcie0 {
diff --git a/drivers/mmc/host/sdhci-of-dwcmshc.c b/drivers/mmc/host/sdhci-of-dwcmshc.c
index 6e37ec750f3b..ea7b01ec5a14 100644
--- a/drivers/mmc/host/sdhci-of-dwcmshc.c
+++ b/drivers/mmc/host/sdhci-of-dwcmshc.c
@@ -100,11 +100,45 @@ static void dwcmshc_adma_write_desc(struct sdhci_host *host, void **desc,
 static unsigned int dwcmshc_get_max_clock(struct sdhci_host *host)
 {
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
+	/*
+	TODO: fix min\max clk rate
+	return clk_round_rate(pltfm_host->clk, ULONG_MAX);
+	*/
+	struct mmc_host *mmc = host->mmc;
+	struct device *dev = mmc_dev(mmc);
+	unsigned int ret;
+
+	if (device_property_read_u32(dev, "max-clock", &ret) < 0) {
+		if (pltfm_host->clk)
+			ret = sdhci_pltfm_clk_get_max_clock(host);
+		else if (pltfm_host->clock)
+			ret = pltfm_host->clock;
+		else
+			ret = 1*1000*1000;
+	}
+	return ret;
+}
 
-	if (pltfm_host->clk)
-		return sdhci_pltfm_clk_get_max_clock(host) / MSHC_INPUT_DIVIDER;
-	else
-		return pltfm_host->clock;
+static unsigned int dwcmshc_get_min_clock (struct sdhci_host *host)
+{
+	/*
+	TODO: fix min\max clk rate
+	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
+	return clk_round_rate(pltfm_host->clk, ULONG_MIN);
+	*/
+	return 150*1000;   /* tx2 = (pll=1200MHz)/(div=250*16) = 300/2 = 150KHz */
+}
+
+static void dwcmshc_set_clock(struct sdhci_host *host, unsigned int clock)
+{
+	struct sdhci_pltfm_host *pltfm_host;
+	if (clock == 0) {
+		return;
+	}
+	pltfm_host = sdhci_priv(host);
+	clk_set_rate(pltfm_host->clk, clock * MSHC_INPUT_DIVIDER);
+	host->mmc->actual_clock = clk_get_rate(pltfm_host->clk) / MSHC_INPUT_DIVIDER;
+	sdhci_enable_clk(host, 0);
 }
 
 static void dwcmshc_check_auto_cmd23(struct mmc_host *mmc,
@@ -258,10 +292,11 @@ static void dwcmshc_rk3568_set_clock(struct sdhci_host *host, unsigned int clock
 }
 
 static const struct sdhci_ops sdhci_dwcmshc_ops = {
-	.set_clock		= sdhci_set_clock,
+	.set_clock		= dwcmshc_set_clock,
 	.set_bus_width		= sdhci_set_bus_width,
 	.set_uhs_signaling	= dwcmshc_set_uhs_signaling,
 	.get_max_clock		= dwcmshc_get_max_clock,
+	.get_min_clock		= dwcmshc_get_min_clock,
 	.reset			= sdhci_reset,
 	.adma_write_desc	= dwcmshc_adma_write_desc,
 };
@@ -278,7 +313,9 @@ static const struct sdhci_ops sdhci_dwcmshc_rk3568_ops = {
 static const struct sdhci_pltfm_data sdhci_dwcmshc_pdata = {
 	.ops = &sdhci_dwcmshc_ops,
 	.quirks = SDHCI_QUIRK_CAP_CLOCK_BASE_BROKEN,
-	.quirks2 = SDHCI_QUIRK2_PRESET_VALUE_BROKEN | SDHCI_QUIRK2_BROKEN_64_BIT_DMA_MASK,
+	.quirks2 = SDHCI_QUIRK2_PRESET_VALUE_BROKEN |
+					SDHCI_QUIRK2_BROKEN_64_BIT_DMA_MASK |
+					SDHCI_QUIRK2_NO_1_8_V,
 };
 
 static const struct sdhci_pltfm_data sdhci_dwcmshc_rk3568_pdata = {
@@ -353,7 +390,6 @@ static int dwcmshc_probe(struct platform_device *pdev)
 	const struct sdhci_pltfm_data *pltfm_data;
 	int err;
 	u32 extra;
-	u32 max;
 
 	pltfm_data = of_device_get_match_data(&pdev->dev);
 	if (!pltfm_data) {
@@ -393,14 +429,14 @@ static int dwcmshc_probe(struct platform_device *pdev)
 			clk_prepare_enable(priv->bus_clk);
 	}
 
-	if (device_property_read_u32(&pdev->dev, "max-frequency", &max) < 0)
-		max = 10000000;
-	clk_set_rate(pltfm_host->clk, max * MSHC_INPUT_DIVIDER);
-
 	err = clk_prepare_enable(pltfm_host->clk);
 	if (err)
 		goto free_pltfm;
 
+	priv->bus_clk = devm_clk_get(&pdev->dev, "bus");
+	if (!IS_ERR(priv->bus_clk))
+		clk_prepare_enable(priv->bus_clk);
+
 	err = mmc_of_parse(host->mmc);
 	if (err)
 		goto err_clk;
@@ -479,6 +515,7 @@ static int dwcmshc_suspend(struct device *dev)
 		return ret;
 
 	clk_disable_unprepare(pltfm_host->clk);
+	clk_disable_unprepare(priv->bus_clk);
 
 	if (rk_priv)
 		clk_bulk_disable_unprepare(RK3568_MAX_CLKS,
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 713833d9a7c9..daa7f2586c01 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -3198,9 +3198,12 @@ static void sdhci_cmd_irq(struct sdhci_host *host, u32 intmask, u32 *intmask_p)
 		 */
 		if (host->pending_reset)
 			return;
+		/*
+		TODO: fix false positives interrupts on mitx board.
 		pr_err("%s: Got command interrupt 0x%08x even though no command operation was in progress.\n",
 		       mmc_hostname(host->mmc), (unsigned)intmask);
 		sdhci_dumpregs(host);
+		*/
 		return;
 	}
 
-- 
2.33.0

