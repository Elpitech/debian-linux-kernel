From c2674321983d3ac1a93abf8fe4e1e6f85b12aa82 Mon Sep 17 00:00:00 2001
From: Vitaly Miniakhmetov <vitalii.miniakhmetov@t-platforms.ru>
Date: Thu, 17 Jun 2021 12:25:04 +0500
Subject: [PATCH 052/106] i2c-baikal-smbus: Fixed smbus clock rate

---
 drivers/i2c/busses/i2c-baikal-smbus.c | 48 +++++++++++++++++++--------
 1 file changed, 34 insertions(+), 14 deletions(-)

diff --git a/drivers/i2c/busses/i2c-baikal-smbus.c b/drivers/i2c/busses/i2c-baikal-smbus.c
index 6839cfa31fa3..85d00994ea8f 100644
--- a/drivers/i2c/busses/i2c-baikal-smbus.c
+++ b/drivers/i2c/busses/i2c-baikal-smbus.c
@@ -51,11 +51,14 @@ struct be_smbus_dev {
 	struct clk		*smbus_clk;
 	struct i2c_adapter	adapter;
 	u32			bus_clk_rate;
+	u64			smbus_clk_rate;
 };
 
 static int be_smbus_init(struct be_smbus_dev *besmb)
 {
-	u32 divider = clk_get_rate(besmb->smbus_clk) / besmb->bus_clk_rate - 1;
+	u32 divider = (besmb->smbus_clk_rate == 0 ?
+								 clk_get_rate(besmb->smbus_clk) :
+								 besmb->smbus_clk_rate) / besmb->bus_clk_rate - 1;
 
 	writel(BE_CR1_IRT, besmb->base + BE_SMBUS_CR1);
 	writel(0, besmb->base + BE_SMBUS_CR1);
@@ -365,10 +368,27 @@ static int be_smbus_probe(struct platform_device *pdev)
 		return irq;
 	}
 
-	besmb->smbus_clk = devm_clk_get(&pdev->dev, NULL);
-	if (IS_ERR(besmb->smbus_clk)) {
-		dev_err(&pdev->dev, "missing clock\n");
-		return PTR_ERR(besmb->smbus_clk);
+	if (dev_of_node(&pdev->dev)) {
+		besmb->smbus_clk = devm_clk_get(&pdev->dev, NULL);
+		if (IS_ERR(besmb->smbus_clk)) {
+			dev_err(&pdev->dev, "missing clock\n");
+			return PTR_ERR(besmb->smbus_clk);
+		}
+
+		ret = clk_prepare_enable(besmb->smbus_clk);
+		if (ret) {
+			dev_err(&pdev->dev, "failed to enable clock\n");
+			return ret;
+		}
+
+		besmb->smbus_clk_rate = 0;
+#ifdef CONFIG_ACPI
+	} else if (to_acpi_device_node(pdev->dev.fwnode) &&
+						 acpi_evaluate_integer (to_acpi_device_node(pdev->dev.fwnode)->handle,
+																		"CLK", NULL, &besmb->smbus_clk_rate)) {
+		dev_err(&pdev->dev, "missing clock-frequency value\n");
+		return -EINVAL;
+#endif
 	}
 
 	besmb->base = base;
@@ -385,12 +405,6 @@ static int be_smbus_probe(struct platform_device *pdev)
 		return ret;
 	}
 
-	ret = clk_prepare_enable(besmb->smbus_clk);
-	if (ret) {
-		dev_err(&pdev->dev, "failed to enable clock\n");
-		return ret;
-	}
-
 	i2c_set_adapdata(&besmb->adapter, besmb);
 	strlcpy(besmb->adapter.name, pdev->name, sizeof(besmb->adapter.name));
 	besmb->adapter.owner = THIS_MODULE;
@@ -403,16 +417,22 @@ static int be_smbus_probe(struct platform_device *pdev)
 	ret = be_smbus_init(besmb);
 	if (ret) {
 		dev_err(&pdev->dev, "failed to init SMBus\n");
-		return ret;
+		goto err_clk;
 	}
 
 	ret = i2c_add_adapter(&besmb->adapter);
 	if (ret) {
-		clk_disable_unprepare(besmb->smbus_clk);
-		return ret;
+		goto err_clk;
 	}
 
 	return 0;
+
+err_clk:
+	if (dev_of_node(&pdev->dev)) {
+		clk_disable_unprepare(besmb->smbus_clk);
+	}
+
+	return ret;
 }
 
 static int be_smbus_remove(struct platform_device *pdev)
-- 
2.33.0

